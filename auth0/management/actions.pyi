from typing import Any


class Actions:
    def get_actions_async(self: Any, trigger_id: str | None = None, action_name: str | None = None, deployed: bool | None = None, installed: bool = False, page: int | None = None, per_page: int | None = None) -> Any: ...
    def create_action_async(self: Any, body: dict[str, Any]) -> dict[str, Any]: ...
    def update_action_async(self: Any, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_action_async(self: Any, id: str) -> dict[str, Any]: ...
    def delete_action_async(self: Any, id: str, force: bool = False) -> Any: ...
    def get_triggers_async(self: Any) -> dict[str, Any]: ...
    def get_execution_async(self: Any, id: str) -> dict[str, Any]: ...
    def get_action_versions_async(self: Any, id: str, page: int | None = None, per_page: int | None = None) -> dict[str, Any]: ...
    def get_trigger_bindings_async(self: Any, id: str, page: int | None = None, per_page: int | None = None) -> dict[str, Any]: ...
    def get_action_version_async(self: Any, action_id: str, version_id: str) -> dict[str, Any]: ...
    def deploy_action_async(self: Any, id: str) -> dict[str, Any]: ...
    def rollback_action_version_async(self: Any, action_id: str, version_id: str) -> dict[str, Any]: ...
    def update_trigger_bindings_async(self: Any, id: str, body: dict[str, Any]) -> dict[str, Any]: ...

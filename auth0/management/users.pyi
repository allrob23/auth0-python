from typing import Any


class Users:
    def list_async(self: Any, page: int = 0, per_page: int = 25, sort: str | None = None, connection: str | None = None, q: str | None = None, search_engine: str | None = None, include_totals: bool = True, fields: List[str] | None = None, include_fields: bool = True) -> Any: ...
    def create_async(self: Any, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_async(self: Any, id: str, fields: List[str] | None = None, include_fields: bool = True) -> dict[str, Any]: ...
    def delete_async(self: Any, id: str) -> Any: ...
    def update_async(self: Any, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def list_organizations_async(self: Any, id: str, page: int = 0, per_page: int = 25, include_totals: bool = True) -> Any: ...
    def list_roles_async(self: Any, id: str, page: int = 0, per_page: int = 25, include_totals: bool = True) -> Any: ...
    def remove_roles_async(self: Any, id: str, roles: List[str]) -> Any: ...
    def add_roles_async(self: Any, id: str, roles: List[str]) -> dict[str, Any]: ...
    def list_permissions_async(self: Any, id: str, page: int = 0, per_page: int = 25, include_totals: bool = True) -> Any: ...
    def remove_permissions_async(self: Any, id: str, permissions: List[str]) -> Any: ...
    def add_permissions_async(self: Any, id: str, permissions: List[str]) -> dict[str, Any]: ...
    def delete_multifactor_async(self: Any, id: str, provider: str) -> Any: ...
    def delete_authenticators_async(self: Any, id: str) -> Any: ...
    def unlink_user_account_async(self: Any, id: str, provider: str, user_id: str) -> Any: ...
    def link_user_account_async(self: Any, user_id: str, body: dict[str, Any]) -> list[dict[str, Any]]: ...
    def regenerate_recovery_code_async(self: Any, user_id: str) -> dict[str, Any]: ...
    def get_guardian_enrollments_async(self: Any, user_id: str) -> dict[str, Any]: ...
    def get_log_events_async(self: Any, user_id: str, page: int = 0, per_page: int = 50, sort: str | None = None, include_totals: bool = False) -> Any: ...
    def invalidate_remembered_browsers_async(self: Any, user_id: str) -> dict[str, Any]: ...
    def get_authentication_methods_async(self: Any, user_id: str) -> dict[str, Any]: ...
    def get_authentication_method_by_id_async(self: Any, user_id: str, authentication_method_id: str) -> dict[str, Any]: ...
    def create_authentication_method_async(self: Any, user_id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def update_authentication_methods_async(self: Any, user_id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def update_authentication_method_by_id_async(self: Any, user_id: str, authentication_method_id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def delete_authentication_methods_async(self: Any, user_id: str) -> Any: ...
    def delete_authentication_method_by_id_async(self: Any, user_id: str, authentication_method_id: str) -> Any: ...
